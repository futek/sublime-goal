# [PackageDev] target_format: plist, ext: tmLanguage
---
name: GOAL (goal)
scopeName: source.goal.goal
fileTypes: [goal]
uuid: 4aa68f0f-a1cd-4041-ac63-17bf0e6e60a1

patterns:
- name: ''
  begin: (main|event|init)\s+(module)\s*(?:\[.*\])?\s*\{
  beginCaptures:
    '1': {name: keyword.other.name.goal.mas}
    '2': {name: keyword.other.name.goal.mas}
  end: \}
  patterns:
  - include: '#module'
  - include: '#comment'

- name: ''
  begin: (module)\s+(?:[a-zA-Z_$][a-zA-Z0-9_$]*)(?:\([a-zA-Z0-9_$(),\s]+\))?\s*(?:\[.*\])?\s*\{
  beginCaptures:
    '1': {name: keyword.other.name.goal.mas}
  end: \}
  patterns:
  - include: '#module'
  - include: '#comment'

- include: '#comment'

repository:
  comment:
    match: ((%).*)
    captures:
      '1': {name: comment.line.number-sign.goal.mas}
      '2': {name: punctuation.definition.comment.line.goal.mas}
  string:
    name: string.quoted.double.goal.mas
    match: (")[^"]+(")
    captures:
      '1': {name: punctuation.definition.string.begin.goal.mas}
      '2': {name: punctuation.definition.string.end.goal.mas}
  module:
    patterns:
    - name: ''
      begin: (knowledge|beliefs|goals)\s*\{
      beginCaptures:
        '1': {name: keyword.other.name.goal.mas}
      end: \}
      patterns:
      - include: 'source.prolog'
    - name: ''
      begin: (program)\s*(?:\[*.\])?\s*\{
      beginCaptures:
        '1': {name: keyword.other.name.goal.mas}
      end: \}
      patterns:
      - include: '#action-rules'
    - name: ''
      begin: (actionspec)\s*(?:\[*.\])?\s*\{
      beginCaptures:
        '1': {name: keyword.other.name.goal.mas}
      end: \}
      patterns:
      - include: '#action-spec'
  action-rules:
    patterns:
    - name: ''
      begin: \#(define)\s+([a-zA-Z_][a-zA-Z0-9_]*)\s+
      beginCaptures:
        '1': {name: keyword.control.import.define.goal.goal}
        '2': {name: entity.name.function.preprocessor.goal.goal}
      end: \.\s*\n
      patterns:
      - include: '#ms-query'
    - name: ''
      begin: (if)\b
      beginCaptures:
        '1': {name: keyword.other.name.goal.mas}
      end: (then)
      endCaptures:
        '1': {name: keyword.other.name.goal.mas}
      patterns:
      - include: '#ms-query'
    - name: ''
      begin: (forall)\b
      beginCaptures:
        '1': {name: keyword.other.name.goal.mas}
      end: (do)
      endCaptures:
        '1': {name: keyword.other.name.goal.mas}
      patterns:
      - include: '#ms-query'
    - name: ''
      begin: (listall)\b
      beginCaptures:
        '1': {name: keyword.other.name.goal.mas}
      end: (do)
      endCaptures:
        '1': {name: keyword.other.name.goal.mas}
      patterns:
      - include: '#listall-conditions'
    - name: ''
      begin: (adopt|drop|insert|delete|send|sendonce)\s*\(
      beginCaptures:
        '1': {name: support.class.goal.mas}
      end: \)
      patterns:
      - include: 'source.prolog'
    - name: ''
      match: \s(exit-module)(:?\(all\))?
      captures:
        '1': {name: support.class.goal.mas}
    - include: '#comment'
  ms-query:
    patterns:
    - name: ''
      begin: (not)\s*\(
      beginCaptures:
        '1': {name: support.class.goal.mas}
      end: \)
      patterns:
      - include: '#ms-query'
    - name: ''
      begin: (a-goal|goal|goal-a|bel)\s*\(
      beginCaptures:
        '1': {name: support.class.goal.mas}
      end: \)
      patterns:
      - include: 'source.prolog'
    - name: ''
      match: (true)
      captures:
        '1': {name: support.class.goal.mas}
    - include: '#comment'
  listall-conditions:
    patterns:
    - name: ''
      begin: (not)\s*\(
      beginCaptures:
        '1': {name: support.class.goal.mas}
      end: \)
      patterns:
      - include: '#ms-query'
    - name: ''
      begin: (a-goal|goal|goal-a|bel|[a-zA-Z\$_][a-zA-Z0-9_\$]+)\s*\(
      beginCaptures:
        '1': {name: support.class.goal.mas}
      end: \)
      patterns:
      - include: 'source.prolog'
    - name: ''
      match: (true)
      captures:
        '1': {name: support.class.goal.mas}
    - include: '#comment'
  action-spec:
    patterns:
    - name: ''
      begin: ([a-zA-Z\$_][a-zA-Z0-9_\$]+)\s*(?:(\()([A-Z][a-zA-Z0-9_]*(?:A-Z][a-zA-Z0-9_]*\s*,\s*)?)(\)))?\s*\{
      beginCaptures:
        '1': {name: entity.name.function.goal.goal}
        '2': {name: punctuation.definition.parameters.begin.goal.goal}
        '3': {name: variable.parameter.function.goal.goal}
        '4': {name: punctuation.definition.parameters.end.goal.goal}
      end: \}
      patterns:
      - include: '#action-spec-prepost'
    - include: '#comment'
  action-spec-prepost:
    patterns:
    - name: ''
      begin: (pre|post)\s*\{
      beginCaptures:
        '1': {name: keyword.other.name.goal.mas}
      end: \}
      patterns:
      - include: 'source.prolog'
    - include: '#comment'
...